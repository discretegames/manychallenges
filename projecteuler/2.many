%% Solutions to https://projecteuler.net/problem=2. Run this file with runmany: https://pypi.org/project/runmany

Print: 4613732

Python:
	limit = 4000000
	total, a, b = 0, 1, 2
	while a < limit:
		if a % 2 == 0:
			total += a
		a, b = b, a + b
	print(total)

JavaScript:
	const limit = 4000000;
	let total = 0, a = 1, b = 1;
	while (a < limit) {
		if (a % 2 === 0) total += a;
		[a, b] = [b, a + b];
	}
	console.log(total)

Ruby:
	limit = 4000000
	total, a, b = 0, 1, 2
	while a < limit
		if a.even?
			total += a
		end
		a, b = b, a + b
	end
	puts total

PHP:
	<?php
		$limit = 4000000;
		$total = 0; $a = 1; $b = 2;
		while ($a < $limit) {
			if ($a % 2 == 0) {
				$total += $a;
			}
			$sum = $a + $b;
			$a = $b;
			$b = $sum;
		}
		echo $total . "\n";
	?>

R:
	limit <- 4000000
	total <- 0
	a <- 1
	b <- 2
	while (a < limit) {
		if (a %% 2 == 0) {
			total <- total + a
		}
		sum <- a + b
		a <- b
		b <- sum
	}
	cat(total, '\n', sep='')

C#:
	class PE {
		static void Main(string[] args) {
			int limit = 4000000;
			int total = 0, a = 1, b = 2;
			while (a < limit) {
				if (a % 2 == 0) {
					total += a;
				}
				int sum = a + b;
				a = b;
				b = sum;
			}
			System.Console.WriteLine(total);
		}
	}

Java:
	class PE {
		public static void main(String[] args) {
			int limit = 4000000;
			int total = 0, a = 1, b = 2;
			while (a < limit) {
				if (a % 2 == 0) {
					total += a;
				}
				int sum = a + b;
				a = b;
				b = sum;
			}
			System.out.println(total);
		}
	}

Kotlin:
	fun main() {
		val limit = 4000000;
		var (total, a, b) = listOf(0, 1, 2)
		while (a < limit) {
			if (a % 2 == 0) {
				total += a
			}
			a = b.also {b = a + b}
		}
		println(total)
	}

Dart:
	void main() {
		const limit = 4000000;
		var total = 0, a = 1, b = 2;
		while (a < limit) {
			if (a.isEven) {
				total += a;
			}
			var sum = a + b;
			a = b;
			b = sum;
		}
		print(total);
	}

C:
	#include <stdio.h>
	int main() {
		int limit = 4000000;
		int total = 0, a = 1, b = 2;
		while (a < limit) {
			if (a % 2 == 0) {
				total += a;
			}
			int sum = a + b;
			a = b;
			b = sum;
		}
		printf("%d\n", total);
	}

C++:
	#include <iostream>
	using namespace std;
	int main() {
		int limit = 4000000;
		int total = 0, a = 1, b = 2;
		while (a < limit) {
			if (a % 2 == 0) {
				total += a;
			}
			a += b;
			swap(a, b);
		}
		cout << total << endl;
	}

Go:
	package main
	import "fmt"
	func main() {
		const limit = 4000000
		var total, a, b = 0, 1, 2
		for a < limit {
			if (a % 2 == 0) { 
				total += a
			}
			a, b = b, a + b
		}
		fmt.Println(total)
	}

Rust:
	fn main() {
		let limit = 4000000;
		let (mut total, mut a, mut b) = (0, 1, 2);
		while a < limit {
			if a % 2 == 0 {
				total += a;
			}
			let sum = a + b;
			a = b;
			b = sum;
		}
		println!("{}", total);
	}

Haskell:
	limit = 4000000
	f total a b = do
		if a < limit
		then f (if (mod a 2 == 0) then (a + total) else total) b (a + b)
		else total
	main = print(f 0 1 2)

Racket:
	#lang racket
	(define limit 4000000)
	(define (f total a b)
		(if (< a limit)
			(f (if (even? a) (+ a total) total) b (+ a b))
			total
		)
	)
	(display (string-append (~a (f 0 1 2)) "\n"))