%% Solutions to https://adventofcode.com/2021/day/2. Run this file with runmany: https://pypi.org/project/runmany

Settings: {"cwd": "adventofcode/2021"}

Argv: 2t.txt
Also: 2.txt

Python:
    def p1(data):
        x = y = 0
        for cmd, amt in data:
            if cmd == 'forward':
                x += amt
            elif cmd == 'down':
                y += amt
            else:
                y -= amt
        return x * y

    def p2(data):
        x = y = aim = 0
        for cmd, amt in data:
            if cmd == 'down':
                aim += amt
            elif cmd == 'up':
                aim -= amt
            else:
                x += amt
                y += aim * amt
        return x * y
        
    import sys
    with open(sys.argv[1]) as file:
        data = [(cmd, int(amt)) for cmd, amt in map(str.split, file)]

    print(p1(data))
    print(p2(data))


JavaScript:
    function p1(data) {
        let x = 0, y = 0;
        for (const [cmd, amt] of data) {
            if (cmd === 'forward') x += amt;
            else if (cmd === 'down') y += amt;
            else y -= amt;
        }
        return x * y;
    }

    function p2(data) {
        let x = 0, y = 0, aim = 0;
        for (const [cmd, amt] of data) {
            if (cmd === 'down') aim += amt;
            else if (cmd === 'up') aim -= amt;
            else {
                x += amt;
                y += aim * amt;
            }
        }
        return x * y;
    }

    const fs = require('fs');;
    const data = fs.readFileSync(process.argv[2], 'utf8').split('\n').map(line => {
        const [cmd, amt] = line.split(' ');
        return [cmd, parseInt(amt)]; 
    });

    console.log(p1(data))
    console.log(p2(data))


Java:
    import java.util.*;
    import java.nio.file.*;
    import java.io.IOException;
    import java.util.stream.Collectors;

    public class AoC {

        private static int p1(List<String[]> data) {
            int x = 0, y = 0;
            for (String[] d : data) {
                String cmd = d[0];
                int amt = Integer.parseInt(d[1]);
                if (cmd.equals("forward")) {
                    x += amt;
                } else if (cmd.equals("down")) {
                    y += amt;
                } else {
                    y -= amt;
                }
            }
            return x * y;
        }

        private static int p2(List<String[]> data) {
            int x = 0, y = 0, aim = 0;
            for (var d : data) {
                var cmd = d[0];
                var amt = Integer.parseInt(d[1]);
                if (cmd.equals("down")) {
                    aim += amt;
                } else if (cmd.equals("up")) {
                    aim -= amt;
                } else {
                    x += amt;
                    y += aim * amt;
                }
            }
            return x * y;
        }

        public static void main(String[] args) {
            try {
                var data = Files.lines(Paths.get(args[0])).map(line -> line.split(" ")).collect(Collectors.toList());
                System.out.println(AoC.p1(data));
                System.out.println(AoC.p2(data));
            } catch (IOException e) {}
        }
    }


C#:
    using System;
    using System.IO;
    class AoC {

        static int P1(string[][] data) {
            int x = 0, y = 0;
            foreach(var d in data) {
                var cmd = d[0];
                var amt = Int32.Parse(d[1]);
                if (cmd.Equals("forward")) {
                    x += amt;
                } else if (cmd.Equals("down")) {
                    y += amt;
                } else {
                    y -= amt;
                }
            }
            return x * y;
        }

        static int P2(string[][] data) {
            int x = 0, y = 0, aim = 0;
            foreach(var d in data) {
                var cmd = d[0];
                var amt = Int32.Parse(d[1]);
                if (cmd.Equals("down")) {
                    aim += amt;
                } else if (cmd.Equals("up")) {
                    aim -= amt;
                } else {
                    x += amt;
                    y += aim * amt;
                }
            }
            return x * y;
        }

        static void Main(string[] args)    {
            var data = Array.ConvertAll(File.ReadAllText(args[0]).Split('\n'), line => line.Split(' '));
            System.Console.WriteLine(P1(data));
            System.Console.WriteLine(P2(data));
        }
    }


C:



Rust:
